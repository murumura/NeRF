general {
    base_exp_dir = ./exp/CASE_NAME/lego
}

dataset {
    # root directory of dataset
    dataset_dir = /nerf/data/datasets/nerf_synthetic/lego
    dataset_type = blender # options: blender / deepvoxels
    img_wh = "(400,400)"
}

train {
    scheduler{
        type = "DefaultScheduler"
        options {
            # Multiplicative factor of learning rate decay.
            gamma= 0.1
            # Period of learning rate decay.
            step_size= 450000
        }
    }

    optimizer {
        type = Adam
        lr = 5e-4
    }

    end_iter = 150000
    batch_size = 1024
    chunk_size = 512
    save_every = 10000
    validate_every=5000
}

model {
    nerf {
        NeRF_Depth = 8
        NeRF_Width = 256
        NeRF_in_channels_xyz = 3
        NeRF_in_channels_dir = 3
        skips=[4]
        use_encoder=True
        pos_encoder_name="position_encoder"
        num_freqs_xyz=10 # number of encoding functions to use in the positional encoding of the coordinates.
        log_sampling_xyz = True
        num_freqs_dir=4 # number of encoding functions to use in the positional encoding of the direction.
        log_sampling_dir = True
    }
    volume_renderer {
        train_radiance_field_noise_std = 0.2
        val_radiance_field_noise_std = 0.0
        white_background = True
        attenuation_threshold = 1e-3
    }
    num_coarse_samples= 64
    num_fine_samples= 128
    # sampling linearly in disparity rather than depth, using in LLFF dataset
    lindisp=False
    # If True, each ray is sampled at stratified random points in time.
    perturb=True
}
